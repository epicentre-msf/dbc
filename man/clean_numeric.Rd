% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_numeric.R
\name{clean_numeric}
\alias{clean_numeric}
\title{Clean numeric variables within a dataset based on a dictionary of
value-replacement pairs}
\usage{
clean_numeric(x, vars, vars_id = NULL, dict_clean, fn = as.numeric, na = ".na")
}
\arguments{
\item{x}{A data frame with one or more columns to clean}

\item{vars}{Names of columns within \code{x} to clean}

\item{vars_id}{Optional vector of one or more ID columns within \code{x} on which
corrections should be conditional.

If not specified the cleaning dictionary contains one entry for each unique
combination of variable and non-valid value. If specified the cleaning
dictionary contains one entry for each unique combination of variable,
non-valid value, and ID variable.}

\item{dict_clean}{Dictionary of value-replacement pairs (e.g. produced by
\code{\link{check_numeric}}). Must include columns "variable", "value",
"replacement", and, if specified as an argument, all columns specified by
\code{vars_id}.}

\item{fn}{Function to convert values to numeric. Defaults to \code{\link{as.numeric}}.}

\item{na}{Keyword to use within column "replacement" for values that should
be converted to \code{NA}. Defaults to ".na". The keyword is used to distinguish
between "replacement" values that are missing because they have yet to be
manually verified, and values that have been verified and really should be
converted to \code{NA}.}
}
\value{
The original data frame \code{x} but with cleaned versions of columns \code{vars}
}
\description{
Applies a dictionary of value-replacement pairs and a conversion function
(defaults to \code{\link{as.numeric}}) to clean and standardize values of numeric
variables. To use this approach the numeric columns of the original dataset
should generally be imported as type "text" or "character" so that non-valid
values are not automatically coerced to missing values on import.
}
\examples{
# load example dataset and dictionary of value-replacement pairs
data(ll1)
data(clean_num1)

# dictionary-based corrections to numeric vars 'age' and 'contacts'
clean_numeric(ll1, vars = c("age", "contacts"), dict_clean = clean_num1)

}
