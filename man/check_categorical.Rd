% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_categorical.R
\name{check_categorical}
\alias{check_categorical}
\title{Produce a dictionary of non-valid categorical values within a dataset, for
use in subsequent data cleaning}
\usage{
check_categorical(
  x,
  dict_allowed,
  dict_clean = NULL,
  vars_id = NULL,
  fn = std_text,
  allow_na = TRUE,
  na = ".na",
  populate_na = FALSE,
  return_all = FALSE
)
}
\arguments{
\item{x}{A data frame with one or more columns to check}

\item{dict_allowed}{Dictionary of allowed values for each variable of
interest. Must include columns "variable" and "value".}

\item{dict_clean}{Optional dictionary of value-replacement pairs (e.g. from a
previous run of this function). Must include columns "variable", "value",
"replacement", and, if specified as an argument, all columns specified by
\code{vars_id}.}

\item{vars_id}{Optional vector of one or more ID columns within \code{x} on which
corrections should be conditional.

If not specified the cleaning dictionary contains one entry for each unique
combination of variable and non-valid value. If specified the cleaning
dictionary contains one entry for each unique combination of variable,
non-valid value, and ID variable.}

\item{fn}{Function to standardize raw values in both the dataset and
dictionary prior to comparing, to account for minor variation in character
case, spacing, punctuation, etc. Defaults to \code{\link{std_text}}. To omit the
standardization step can use e.g. \code{as.character} or an identity function
\code{function(x) x}.}

\item{allow_na}{Logical indicating whether missing values should always be
treated as 'allowed' even if not explicitly specified in \code{dict_allowed}.
Defaults to \code{TRUE}.}

\item{na}{Keyword to use within column "replacement" for values that should
be converted to \code{NA}. Defaults to ".na". The keyword is used to distinguish
between "replacement" values that are missing because they have yet to be
manually verified, and values that have been verified and really should be
converted to \code{NA}.}

\item{populate_na}{Logical indicating whether to pre-populate column
"replacement" with values specified by keyword \code{na}. If most non-valid
values in \code{x} are non-correctable, pre-populating the keyword \code{na} can save
time during the manual verification/correction phase. Defaults to \code{FALSE}.}

\item{return_all}{Logical indicating whether to return all non-valid values
including those already specified in argument \code{dict_clean} (if specified)
(\code{TRUE}), or only the new non-valid entries not already specified in
\code{dict_clean} (\code{FALSE}). Defaults to \code{FALSE}.}
}
\value{
Data frame representing a dictionary of non-valid values, to be used in a
future data cleaning step (after specifying the corresponding replacement
values). Columns include:
\itemize{
\item columns specified in \code{vars_id}, if given
\item \code{variable}: column name of variable within \code{x}
\item \code{value}: non-valid value
\item \code{replacement}: correct value that should replace a given non-valid value
\item \code{new}: logical indicating whether the entry is new (TRUE) or already
specified in argument \code{dict_clean} (\verb{<NA>})
}
}
\description{
Values are compared against a user-provided dictionary specifying the allowed
values of each categorical variable, after text standardization to account
for minor differences in character case, spacing, and punctuation.

The resulting cleaning dictionary can then be manually reviewed to fill in
appropriate replacement values for each non-valid categorical value, or a
missing-value keyword indicating that the value should be converted to \code{NA}.
}
\examples{
# load example dataset, and dictionary of allowed categorical values
data(ll1)
data(dict_categ1)

# basic output
check_categorical(ll1, dict_allowed = dict_categ1)

}
