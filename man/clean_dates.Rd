% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_dates.R
\name{clean_dates}
\alias{clean_dates}
\title{Clean date variables within a dataset based on a dictionary of
value-replacement pairs}
\usage{
clean_dates(x, vars, vars_id, dict_clean = NULL, fn = parse_dates, na = ".na")
}
\arguments{
\item{x}{A data frame with one or more date columns to clean}

\item{vars}{Names of date columns within \code{x} to clean}

\item{vars_id}{Vector of one or more ID columns within \code{x} on which
corrections should be conditional.}

\item{dict_clean}{Optional dictionary of value-replacement pairs (e.g.
produced by a prior run of \code{\link{check_dates}}). Must include columns
"variable", "value", "replacement", and all columns specified by \code{vars_id}.}

\item{fn}{Function to parse raw date values. Defaults to \code{\link{parse_dates}}.}

\item{na}{Keyword to use within column "replacement" for values that should
be converted to \code{NA}. Defaults to ".na". The keyword is used to distinguish
between "replacement" values that are missing because they have yet to be
manually verified, and values that have been verified and really should be
converted to \code{NA}.}
}
\value{
The original data frame \code{x} but with cleaned versions of the date variables
specified in argument \code{vars}
}
\description{
Applies a dictionary of value-replacement pairs and a conversion function
(defaults to \code{\link{parse_dates}}) to clean and standardize values of date
variables. To use this approach the date columns of the original dataset
should generally be imported as type "text" or "character" so that non-valid
values are not automatically coerced to missing values on import.
}
\examples{
# load example dataset and cleaning dictionary
data(ll1)
data(clean_dates1)

# clean dates using only date coercion function
clean_dates(
  ll1,
  vars = c("date_onset", "date_admit", "date_exit"),
  vars_id = "id"
)

# clean dates using dictionary and coercion function
clean_dates(
  ll1,
  vars = c("date_onset", "date_admit", "date_exit"),
  vars_id = "id",
  dict_clean = clean_dates1
)

}
